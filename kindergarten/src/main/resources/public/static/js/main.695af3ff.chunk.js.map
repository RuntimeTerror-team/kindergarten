{"version":3,"sources":["components/Login/LoginComponent.jsx","AppConfig.js","context/ServicesContext.js","components/Login/LoginContainer.jsx","components/PageTop/PageTopComponent.jsx","components/AdminUserForm/AdminUserFormComponent.jsx","components/AdminUserForm/AdminUserFormContainer.jsx","components/AdminPage/AdminPageComponent.jsx","components/AdminPage/AdminPageContainer.jsx","components/EducationSpecialistPage/EducationSpecialistPageComponent.jsx","components/EducationSpecialistPage/EducationSpecialistPageContainer.jsx","components/GuardianPage/GuardianPageComponent.jsx","components/GuardianPage/GuardianPageContainer.jsx","components/NoMatch/NoMatchComponent.jsx","App.js","services/UserService.js","index.js"],"names":["LoginComponent","username","password","usernameValidation","passwordValidation","areCredentialsIncorrect","onSubmit","onUsernameChange","onPasswordChange","className","id","htmlFor","value","onChange","name","type","role","baseUrl","process","ServicesContext","React","createContext","LoginContainer","handleChange","e","target","setState","state","resetState","incorrectCredentials","handleSubmit","preventDefault","roleFromBack","usernameFromUser","passwordFromUser","doValidation","trim","length","Axios","get","then","res","passwordFromBack","data","context","userService","setCurrentUser","setUserRole","updateCurrentUser","updateUserRole","getUserRole","props","history","push","catch","err","console","log","this","Component","contextType","withRouter","PageTopComponent","handleLogout","usersName","onClick","AdminUserFormComponent","otherProps","firstname","lastname","firstnameFieldValidation","lastnameFieldValidation","createdUsername","isCreated","placeholder","style","backgroundColor","defaultValue","AdminUserFormContainer","test","validate","fname","lname","typedFirstname","typedLastname","post","firstName","lastName","AdminPageComponent","handleUserChoice","choice","AdminPageContainer","currentUserFirstame","currentUserLastname","EducationSpecialistPageComponent","EducationSpecialistPageContainer","GuardianPageComponent","currentUserFirstname","GuardianPageContainer","componentDidMount","currentUser","getCurrentUser","NoMatchComponent","App","exact","path","component","children","UserService","_currentUser","_userRole","document","title","ReactDOM","render","StrictMode","basename","Provider","getElementById"],"mappings":"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","file":"static/js/main.695af3ff.chunk.js","sourcesContent":["import React from 'react';\r\nimport Proptypes from 'prop-types';\r\n\r\nlet LoginComponent = ({ username, password, usernameValidation, passwordValidation, areCredentialsIncorrect,\r\n    onSubmit, onUsernameChange, onPasswordChange }) => {\r\n\r\n    return (\r\n        <div className=\"row\" id=\"loginForm\">\r\n            <div>\r\n                <h1 id=\"loginh1\">Prisijungimas</h1>\r\n                <form className=\"form\" onSubmit={onSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"username\">Prisijungimo vardas: </label>\r\n                        <input className={`form-control ${usernameValidation}`} id=\"username\" value={username} onChange={onUsernameChange} name=\"username\"></input>\r\n                        <div className=\"invalid-feedback\">\r\n                            Šis laukas privalomas.\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\" className=\"control-label\" >Slaptažodis: </label>\r\n                        <input className={`form-control ${passwordValidation}`} type=\"password\" id=\"password\" value={password} onChange={onPasswordChange} name=\"password\"></input>\r\n                        <div className=\"invalid-feedback\">\r\n                            Šis laukas privalomas.\r\n                        </div>\r\n                    </div>\r\n                    <button className=\"btn btn-primary mb-4\" id=\"loginButton\">Prisijungti</button>\r\n                </form>\r\n                {areCredentialsIncorrect && <div className=\"alert alert-danger col-12\" role=\"alert\">Naudotojo vardas arba slaptažodis neteisingas</div>}\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nLoginComponent.propTypes = {\r\n\r\n    username: Proptypes.string.isRequired,\r\n    password: Proptypes.string.isRequired,\r\n    invalidUsername: Proptypes.string.isRequired,\r\n    invalidPassword: Proptypes.string.isRequired,\r\n    validationErrors: Proptypes.array.isRequired,\r\n    incorrectCredentials: Proptypes.bool.isRequired,\r\n    onUsernameChange: Proptypes.func.isRequired,\r\n    onPasswordChange: Proptypes.func.isRequired,\r\n    onSubmit: Proptypes.func.isRequired\r\n\r\n}\r\n\r\n\r\nexport default LoginComponent;\r\n","const baseUrl = process.env.PUBLIC_URL;\r\n// const baseUrl = \"http://localhost:8080/kindergarten\";\r\n// const baseUrl = \"http://localhost:8080\";\r\n\r\nexport default baseUrl;","import React from 'react';\r\n\r\nconst ServicesContext = React.createContext(null);\r\n\r\nexport default ServicesContext;","import Axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport { withRouter } from \"react-router-dom\";\r\nimport LoginComponent from './LoginComponent';\r\nimport baseUrl from \"../../AppConfig\";\r\nimport ServicesContext from \"../../context/ServicesContext\";\r\n\r\nclass LoginContainer extends Component {\r\n    constructor() {\r\n\r\n        super();\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            usernameValidation: \"\",\r\n            passwordValidation: \"\",\r\n            areCredentialsIncorrect: false\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const { name, value } = e.target;\r\n\r\n        this.setState({ [name]: value });\r\n\r\n        if (this.state.usernameValidation !== \"\" && name === \"username\") {\r\n            this.setState({ usernameValidation: \"\" });\r\n        }\r\n\r\n        if (this.state.passwordValidation !== \"\" && name === \"password\") {\r\n            this.setState({ passwordValidation: \"\" });\r\n        }\r\n\r\n        if (this.state.areCredentialsIncorrect) {\r\n            this.setState({ areCredentialsIncorrect: false });\r\n        }\r\n    }\r\n\r\n    resetState = () => {\r\n        this.setState({ username: \"\" });\r\n        this.setState({ password: \"\" });\r\n        this.setState({ usernameValidation: \"\" });\r\n        this.setState({ passwordValidation: \"\" });\r\n        this.setState({ incorrectCredentials: false });\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n\r\n        let roleFromBack = \"\";\r\n        let usernameFromUser = e.target.username.value;\r\n        let passwordFromUser = e.target.password.value;\r\n\r\n\r\n        this.doValidation(usernameFromUser, passwordFromUser);\r\n\r\n        if (usernameFromUser.trim().length !== 0 && passwordFromUser.trim().length !== 0) {\r\n\r\n            Axios\r\n                .get(`${baseUrl}/api/users/${usernameFromUser}`)\r\n                .then(res => {\r\n                    let passwordFromBack = res.data.password;\r\n                    roleFromBack = res.data.role;\r\n\r\n                    if (passwordFromUser === passwordFromBack) {\r\n                        this.context.userService.setCurrentUser(res.data.username);\r\n                        this.context.userService.setUserRole(roleFromBack);\r\n                        this.context.userService.updateCurrentUser();\r\n                        this.context.userService.updateUserRole();\r\n\r\n                        this.resetState();\r\n                    } else {\r\n                        this.setState({ areCredentialsIncorrect: true });\r\n                    }\r\n                })\r\n                .then(() => {\r\n                    if (this.context.userService.getUserRole() === \"ADMIN\") {\r\n                        this.props.history.push(\"/admin\");\r\n                    } else if (this.context.userService.getUserRole() === \"EDUCATION_SPECIALIST\") {\r\n                        this.props.history.push(\"/education-specialist\");\r\n                    } else if (this.context.userService.getUserRole() === \"GUARDIAN\") {\r\n                        this.props.history.push(\"/guardian\");\r\n                    }\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n    }\r\n\r\n    doValidation = (username, password) => {\r\n        if (username.trim().length === 0) {\r\n            this.setState({ usernameValidation: \"is-invalid\" });\r\n        }\r\n\r\n        if (password.trim().length === 0) {\r\n            this.setState({ passwordValidation: \"is-invalid\" });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"loginPage\" className=\"justify-content-center align-items-center\">\r\n                <h1 className=\"text-center text-info pt-4\">Darželių informacinė sistema</h1>\r\n                <LoginComponent\r\n                    username={this.state.username}\r\n                    password={this.state.password}\r\n                    usernameValidation={this.state.usernameValidation}\r\n                    passwordValidation={this.state.passwordValidation}\r\n                    areCredentialsIncorrect={this.state.areCredentialsIncorrect}\r\n                    onSubmit={this.handleSubmit}\r\n                    onUsernameChange={this.handleChange}\r\n                    onPasswordChange={this.handleChange}\r\n                />\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nLoginContainer.contextType = ServicesContext;\r\n\r\nexport default withRouter(LoginContainer);","import React from 'react';\r\n\r\nconst PageTopComponent = ({ handleLogout, usersName }) => {\r\n    return (\r\n        <div className=\"container-fluid p-4\">\r\n            <div className=\"container top-line\">\r\n                <p className=\"lead\"><strong>{usersName}</strong></p>\r\n                <button className=\"btn btn-info\" onClick={handleLogout}>Atsijungti</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default PageTopComponent;\r\n\r\n","import React from 'react';\r\nimport Proptypes from 'prop-types';\r\n\r\nlet AdminUserFormComponent = ({ handleChange, handleSubmit, ...otherProps }) => {\r\n    const { firstname, lastname, firstnameFieldValidation, lastnameFieldValidation, createdUsername, isCreated } = otherProps;\r\n\r\n    return (\r\n        <div className=\"row justify-content-center align-items-center\">\r\n            <div>\r\n                <h1 className=\"mb-4\">Paskyros sukūrimas</h1>\r\n                <form className=\"form\" onSubmit={handleSubmit}>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className={`form-control ${firstnameFieldValidation}`} id=\"firstname\" value={firstname} onChange={handleChange} name=\"firstname\" placeholder=\"Vardas\" />\r\n                        <div className=\"invalid-feedback\">\r\n                            Prašom užpildyti vardą.\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <input type=\"text\" className={`form-control ${lastnameFieldValidation}`} id=\"lastname\" value={lastname} onChange={handleChange} name=\"lastname\" placeholder=\"Pavardė\" />\r\n                        <div className=\"invalid-feedback\">\r\n                            Prašom užpildyti pavardę.\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"input-group mb-3\">\r\n                        <div className=\"input-group-prepend\">\r\n                            <label className=\"input-group-text\" htmlFor=\"inputGroupSelect01\" style={{ backgroundColor: '#e3f2fd' }}>Rolė</label>\r\n                        </div>\r\n                        <select className=\"custom-select\" id=\"inputGroupSelect01\" name=\"role\">\r\n                            <option value=\"GUARDIAN\" defaultValue>Tėvas/globėjas</option>\r\n                            <option value=\"EDUCATION_SPECIALIST\">Švietimo specialistas</option>\r\n                        </select>\r\n                    </div>\r\n                    <button className=\"btn btn-info float-right\">Išsaugoti</button>\r\n                </form>\r\n            </div>\r\n            {isCreated && createdUsername.length <= 30 && <div className=\"alert alert-success mt-4\" role=\"alert\">{`Naudotojas sukurtas. Prisijungimo vardas ir slaptažodis: ${createdUsername}`}</div>}\r\n            {isCreated && createdUsername.length > 30 && <div className=\"alert alert-success mt-4\" role=\"alert\">{createdUsername}</div>}\r\n        </div>\r\n    )\r\n\r\n}\r\n\r\nAdminUserFormComponent.propTypes = {\r\n\r\n    firstname: Proptypes.string.isRequired,\r\n    lastname: Proptypes.string.isRequired,\r\n    role: Proptypes.string.isRequired,\r\n    handleChange: Proptypes.func.isRequired,\r\n    handleSubmit: Proptypes.func\r\n\r\n}\r\n\r\n\r\nexport default AdminUserFormComponent;","import Axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport baseUrl from \"../../AppConfig\";\r\nimport ServicesContext from \"../../context/ServicesContext\";\r\nimport AdminUserFormComponent from './AdminUserFormComponent';\r\n\r\n\r\nclass AdminUserFormContainer extends Component {\r\n    constructor() {\r\n\r\n        super();\r\n        this.state = {\r\n\r\n            firstname: \"\",\r\n            lastname: \"\",\r\n            role: \"\",\r\n            firstnameFieldValidation: \"\",\r\n            lastnameFieldValidation: \"\",\r\n            isCreated: false,\r\n            createdUsername: \"\"\r\n        }\r\n    }\r\n\r\n    handleChange = (e) => {\r\n        const re = /^[a-zA-Z\\b]+$/;\r\n        const { name, value } = e.target;\r\n\r\n        if (value !== '' && re.test(value)) {\r\n            this.setState({ [name]: value });\r\n        } else if (value.length === 0) {\r\n            this.setState({ [name]: \"\" });\r\n        }\r\n\r\n\r\n        if (this.state.firstnameFieldValidation !== \"\" && name === \"firstname\") {\r\n            this.setState({ firstnameFieldValidation: \"\" });\r\n        }\r\n\r\n        if (this.state.lastnameFieldValidation !== \"\" && name === \"lastname\") {\r\n            this.setState({ lastnameFieldValidation: \"\" });\r\n        }\r\n\r\n        if (this.state.isCreated) {\r\n            this.setState({ isCreated: false });\r\n            this.setState({ createdUsername: \"\" });\r\n        }\r\n    }\r\n\r\n    validate = (fname, lname) => {\r\n        if (fname.trim().length === 0) {\r\n            this.setState({ firstnameFieldValidation: \"is-invalid\" });\r\n        }\r\n\r\n        if (lname.trim().length === 0) {\r\n            this.setState({ lastnameFieldValidation: \"is-invalid\" });\r\n        }\r\n    }\r\n\r\n    handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if (this.state.isCreated) {\r\n            this.setState({ isCreated: false });\r\n            this.setState({ createdUsername: \"\" });\r\n        }\r\n\r\n        let typedFirstname = e.target.firstname.value;\r\n        let typedLastname = e.target.lastname.value;\r\n\r\n        this.validate(typedFirstname, typedLastname);\r\n\r\n        if (typedFirstname.trim().length !== 0 && typedLastname.trim().length !== 0) {\r\n            Axios\r\n                .post(`${baseUrl}/api/users/admin`,\r\n                    {\r\n                        firstName: typedFirstname,\r\n                        lastName: typedLastname,\r\n                        role: e.target.role.value\r\n                    })\r\n                .then(res => {\r\n                    this.setState({ isCreated: true });\r\n                    this.setState({ createdUsername: res.data })\r\n                })\r\n                .catch(err => console.log(err));\r\n\r\n            this.setState({ firstname: \"\" })\r\n            this.setState({ lastname: \"\" })\r\n            this.setState({ role: \"\" })\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div>\r\n                <AdminUserFormComponent\r\n                    handleSubmit={this.handleSubmit}\r\n                    handleChange={this.handleChange}\r\n                    {...this.state}\r\n                />\r\n            </div>\r\n        )\r\n\r\n    }\r\n\r\n}\r\n\r\nAdminUserFormContainer.contextType = ServicesContext;\r\n\r\nexport default AdminUserFormContainer;","import React from \"react\";\r\nimport PageTopComponent from '../PageTop/PageTopComponent';\r\nimport AdminUsersFormContainer from '../AdminUserForm/AdminUserFormContainer';\r\n\r\nconst AdminPageComponent = ({handleLogout, handleUserChoice, choice}) => {\r\n    return (\r\n        <div>\r\n            <PageTopComponent handleLogout={handleLogout} usersName={\"Administratoriaus paskyra\"} />\r\n            <div className=\"container p-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"admin-actions col-4\">\r\n                        <button className=\"btn btn-info mb-2 w-100\" onClick={handleUserChoice} name=\"adminUsers\">Paskyrų administravimas</button>\r\n                        <button className=\"btn btn-info mb-2 w-100\" onClick={handleUserChoice} name=\"2\">Kažkas dar</button>\r\n                        <button className=\"btn btn-info mb-2 w-100\" onClick={handleUserChoice} name=\"3\">Ir dar kažkas</button>\r\n                    </div>\r\n                    <div className=\"admin-action-placeholder col-8\">\r\n                        {choice === \"greeting\" && <h1>Sveiki prisijungę į darželių informacinę sistemą</h1>}\r\n                        {choice === \"adminUsers\" && <AdminUsersFormContainer />}\r\n                        {choice === \"2\" && <h1>Kažkas dar</h1>}\r\n                        {choice === \"3\" && <h1>Ir dar kažkas</h1>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AdminPageComponent;","import React, { Component } from 'react';\r\nimport ServicesContext from '../../context/ServicesContext';\r\n\r\nimport '../../styles/pages.css';\r\nimport AdminPageComponent from './AdminPageComponent';\r\n\r\nclass AdminPageContainer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            choice: \"greeting\",\r\n            currentUserFirstame: \"\",\r\n            currentUserLastname: \"\"\r\n        }\r\n    }\r\n\r\n    handleUserChoice = (e) => {\r\n        this.setState({ choice: e.target.name });\r\n    }\r\n\r\n    handleLogout = () => {\r\n        this.context.userService.setCurrentUser(\"\");\r\n        this.context.userService.setUserRole(\"\");\r\n        this.context.userService.updateCurrentUser();\r\n        this.context.userService.updateUserRole();\r\n\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        if (this.context.userService.getUserRole() === \"ADMIN\") {\r\n            return (\r\n                <div className=\"pagesBackgorund\">\r\n                <AdminPageComponent\r\n                    handleUserChoice={this.handleUserChoice}\r\n                    handleLogout={this.handleLogout}\r\n                    choice={this.state.choice}\r\n                />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <h1>Access denied</h1>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nAdminPageContainer.contextType = ServicesContext;\r\n\r\nexport default AdminPageContainer;","import React from \"react\";\r\nimport PageTopComponent from '../PageTop/PageTopComponent';\r\n\r\nconst EducationSpecialistPageComponent = ({ handleLogout, handleUserChoice, choice }) => {\r\n    return (\r\n        <div>\r\n            <PageTopComponent handleLogout={handleLogout} usersName={\"Švietimo specialistas\"} />\r\n            <div className=\"container p-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"admin-actions col-4\">\r\n                        <button className=\"btn btn-info mb-2 w-100\" onClick={handleUserChoice} name=\"1\">Kažkas</button>\r\n                        <button className=\"btn btn-info mb-2 w-100\" onClick={handleUserChoice} name=\"2\">Kažkas dar</button>\r\n                        <button className=\"btn btn-info mb-2 w-100\" onClick={handleUserChoice} name=\"3\">Ir dar kažkas</button>\r\n                    </div>\r\n                    <div className=\"admin-action-placeholder col-8\">\r\n                        {choice === \"greeting\" && <h1>Sveiki prisijungę į darželių informacinę sistemą</h1>}\r\n                        {choice === \"1\" && <h1>Kažkas</h1>}\r\n                        {choice === \"2\" && <h1>Kažkas dar</h1>}\r\n                        {choice === \"3\" && <h1>Ir dar kažkas</h1>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default EducationSpecialistPageComponent;","import React, { Component } from 'react';\r\nimport ServicesContext from '../../context/ServicesContext';\r\n\r\nimport '../../styles/pages.css';\r\nimport EducationSpecialistPageComponent from './EducationSpecialistPageComponent';\r\n\r\nclass EducationSpecialistPageContainer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            choice: \"greeting\"\r\n        }\r\n    }\r\n\r\n    handleUserChoice = (e) => {\r\n        this.setState({ choice: e.target.name });\r\n    }\r\n\r\n    handleLogout = () => {\r\n        this.context.userService.setCurrentUser(\"\");\r\n        this.context.userService.setUserRole(\"\");\r\n        this.context.userService.updateCurrentUser();\r\n        this.context.userService.updateUserRole();\r\n\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        if (this.context.userService.getUserRole() === \"EDUCATION_SPECIALIST\") {\r\n            return (\r\n                <EducationSpecialistPageComponent\r\n                    handleUserChoice={this.handleUserChoice}\r\n                    handleLogout={this.handleLogout}\r\n                    choice={this.state.choice}\r\n                />\r\n            )\r\n        } else {\r\n            return (\r\n                <h1>Access denied</h1>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nEducationSpecialistPageContainer.contextType = ServicesContext;\r\n\r\nexport default EducationSpecialistPageContainer;","import React from \"react\";\r\nimport PageTopComponent from '../PageTop/PageTopComponent';\r\n\r\nconst GuardianPageComponent = ({ handleLogout, handleUserChoice, choice, currentUserFirstname, currentUserLastname }) => {\r\n    return (\r\n        <div>\r\n            <PageTopComponent handleLogout={handleLogout} usersName={`${currentUserFirstname} ${currentUserLastname}`} />\r\n            <div className=\"container p-4\">\r\n                <div className=\"row\">\r\n                    <div className=\"admin-actions col-4\">\r\n                        <button className=\"btn btn-info mb-2 w-100\" onClick={handleUserChoice} name=\"1\">Kažkas</button>\r\n                        <button className=\"btn btn-info mb-2 w-100\" onClick={handleUserChoice} name=\"2\">Kažkas dar</button>\r\n                        <button className=\"btn btn-info mb-2 w-100\" onClick={handleUserChoice} name=\"3\">Ir dar kažkas</button>\r\n                    </div>\r\n                    <div className=\"admin-action-placeholder col-8\">\r\n                        {choice === \"greeting\" && <h1>Sveiki prisijungę į darželių informacinę sistemą</h1>}\r\n                        {choice === \"1\" && <h1>Kažkas</h1>}\r\n                        {choice === \"2\" && <h1>Kažkas dar</h1>}\r\n                        {choice === \"3\" && <h1>Ir dar kažkas</h1>}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default GuardianPageComponent;","import Axios from 'axios';\r\nimport React, { Component } from 'react';\r\nimport ServicesContext from '../../context/ServicesContext';\r\nimport baseUrl from '../../AppConfig';\r\n\r\nimport '../../styles/pages.css';\r\nimport GuardianPageComponent from './GuardianPageComponent';\r\n\r\nclass GuardianPageContainer extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            choice: \"greeting\",\r\n            currentUserFirstname: \"\",\r\n            currentUserLastname: \"\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = () => {\r\n        let currentUser = this.context.userService.getCurrentUser();\r\n\r\n        Axios\r\n            .get(`${baseUrl}/api/users/${currentUser}`)\r\n            .then(res => {\r\n                this.setState({ currentUserFirstname: res.data.firstName });\r\n                this.setState({ currentUserLastname: res.data.lastName });\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    handleUserChoice = (e) => {\r\n        this.setState({ choice: e.target.name });\r\n    }\r\n\r\n    handleLogout = () => {\r\n        this.context.userService.setCurrentUser(\"\");\r\n        this.context.userService.setUserRole(\"\");\r\n        this.context.userService.updateCurrentUser();\r\n        this.context.userService.updateUserRole();\r\n\r\n        this.props.history.push(\"/\");\r\n    }\r\n\r\n    render() {\r\n        if (this.context.userService.getUserRole() === \"GUARDIAN\") {\r\n            return (\r\n                <div>\r\n                    <GuardianPageComponent\r\n                        handleUserChoice={this.handleUserChoice}\r\n                        handleLogout={this.handleLogout}\r\n                        choice={this.state.choice}\r\n                        currentUserFirstname={this.state.currentUserFirstname}\r\n                        currentUserLastname={this.state.currentUserLastname}\r\n                    />\r\n                </div>\r\n            )\r\n        } else {\r\n            return (\r\n                <h1>Access denied</h1>\r\n            )\r\n        }\r\n    }\r\n}\r\n\r\nGuardianPageContainer.contextType = ServicesContext;\r\n\r\nexport default GuardianPageContainer;","import React from 'react'\r\n\r\nconst NoMatchComponent = (props) => {\r\n    const goApp = () => props.history.push('/');\r\n    return (\r\n        <div className=\"container\">\r\n            <div className='m-5'>\r\n                <h1>Tokio adreso nėra</h1>\r\n                <button className='btn btn-primary ml-2 mt-3' onClick={goApp}>Eiti į prisijungimo puslapį</button>\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default NoMatchComponent;","import React from 'react';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport LoginContainer from './components/Login/LoginContainer';\r\nimport AdminPageContainer from './components/AdminPage/AdminPageContainer';\r\nimport EducationSpecialistPageContainer from './components/EducationSpecialistPage/EducationSpecialistPageContainer';\r\nimport GuardianPageContainer from './components/GuardianPage/GuardianPageContainer';\r\nimport NoMatchComponent from './components/NoMatch/NoMatchComponent';\r\n\r\nfunction App(props) {\r\n  return (\r\n  <div>\r\n    <Switch>\r\n      <Route exact path='/' component={LoginContainer} />\r\n      <Route exact path='/admin' component={AdminPageContainer} />\r\n      <Route exact path='/education-specialist' component={EducationSpecialistPageContainer} />\r\n      <Route exact path='/guardian' component={GuardianPageContainer} />\r\n      <Route path='*' component={NoMatchComponent} />\r\n      <Route component={NoMatchComponent} />\r\n    </Switch>\r\n    {props.children}\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","class UserService {\r\n    constructor() {\r\n        this._currentUser = \"\";\r\n        this._userRole = \"\";\r\n    }\r\n    getCurrentUser = () => {\r\n        return this._currentUser;\r\n    }\r\n\r\n    setCurrentUser = (username) => {\r\n        this._currentUser = username;\r\n    }\r\n\r\n    getUserRole = () => {\r\n        return this._userRole;\r\n    }\r\n\r\n    setUserRole = (role) => {\r\n        this._userRole = role;\r\n    }\r\n\r\n    updateCurrentUser = () => { }\r\n    updateUserRole = () => { }\r\n\r\n}\r\n\r\nexport default UserService;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport App from \"./App\";\r\n\r\nimport ServicesContext from './context/ServicesContext'\r\nimport UserService from './services/UserService'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\nimport './styles/styles.css'\r\n\r\ndocument.title = \"Kindergarten App\";\r\n\r\nconst userService = new UserService();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <BrowserRouter basename={process.env.PUBLIC_URL}>\r\n      <ServicesContext.Provider value={{ userService }}>\r\n        <App />\r\n      </ServicesContext.Provider>\r\n    </BrowserRouter>\r\n  </React.StrictMode >,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}